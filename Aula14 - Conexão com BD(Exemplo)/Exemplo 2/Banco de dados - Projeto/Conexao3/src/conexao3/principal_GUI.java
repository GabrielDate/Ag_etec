/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package conexao3;
import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane; 
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Fabio
 */
public class principal_GUI extends javax.swing.JFrame {

 static String end;   
 static int cod;
 static String nom;
 static String em;
 static long tel;
     
  String url2 = "jdbc:mysql://localhost/aprender"; // enderço do BD
  String username = "root";        //nome de um usuário de seu BD
  String password = "";  // senha do BD
//----------------------------------------------------------------------
  
  public static DefaultTableModel  cliente(ResultSet rs) {
        try {
           ResultSetMetaData metaData = rs.getMetaData();
         int numberOfColumns = metaData.getColumnCount();
            Vector columnNames = new Vector();

            columnNames.addElement("Código");
            columnNames.addElement("Nome");
            columnNames.addElement("E-mail");
            columnNames.addElement("Telefone");
            
            
            // Get all rows.
            
            Vector rows = new Vector();
            while (rs.next()) {
                Vector newRow = new Vector();
                for (int i = 1; i <= numberOfColumns; i++) {
                    newRow.addElement(rs.getObject(i));
                }
                rows.addElement(newRow);
            }
           return new DefaultTableModel(rows, columnNames);
       } catch (Exception e) {

           return null;
        }
        
    }
    
  
  
  
  //----------------------------------------------------------------------
  public void refresh(){
    
try{
   Connection conn;
          conn = (Connection) DriverManager.getConnection(url2, username, password);
    Driver.carregaDriver();
     
    
    System.out.println("realizado");
            String sql = "SELECT * FROM cliente;";
PreparedStatement pst = (PreparedStatement) conn.prepareStatement(sql);
ResultSet rs = pst.executeQuery();
tabela.setModel(Atualiza.cliente(rs));
}
catch(Exception e){
JOptionPane.showMessageDialog(null, e);
}    
    } 
  
  
    
    public principal_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("aprender?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        clienteQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Cliente c");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        clienteQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Cliente c");
        clienteList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery1.getResultList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nometela0 = new javax.swing.JTextField();
        emailtela0 = new javax.swing.JTextField();
        teltela0 = new javax.swing.JTextField();
        incluir = new javax.swing.JButton();
        fechar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        codtela0 = new javax.swing.JTextField();
        nome2tela0 = new javax.swing.JTextField();
        email2tela0 = new javax.swing.JTextField();
        tel2tela0 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        carregar = new javax.swing.JButton();
        salvaratualizacao = new javax.swing.JButton();
        atualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lao UI", 2, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("CADASTRO DE CLIENTE");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(113, 25, 250, 20);

        jLabel2.setText("NOME : ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 80, 60, 14);

        jLabel3.setText("EMAIL : ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(80, 110, 50, 14);

        jLabel4.setText("TELEFONE : ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(70, 150, 80, 14);
        jPanel1.add(nometela0);
        nometela0.setBounds(130, 80, 200, 20);

        emailtela0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailtela0ActionPerformed(evt);
            }
        });
        jPanel1.add(emailtela0);
        emailtela0.setBounds(130, 110, 200, 20);

        teltela0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teltela0ActionPerformed(evt);
            }
        });
        jPanel1.add(teltela0);
        teltela0.setBounds(140, 150, 190, 20);

        incluir.setText("INCLUIR");
        incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incluirActionPerformed(evt);
            }
        });
        jPanel1.add(incluir);
        incluir.setBounds(40, 220, 73, 23);

        fechar.setText("FECHAR");
        fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharActionPerformed(evt);
            }
        });
        jPanel1.add(fechar);
        fechar.setBounds(290, 220, 73, 23);

        jTabbedPane1.addTab("Inclusão", jPanel1);

        jPanel2.setLayout(null);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList1, tabela);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliCod}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliNome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliEmail}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliTel}"));
        columnBinding.setColumnName("Telefone");
        columnBinding.setColumnClass(Long.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tabela);
        tabela.getColumnModel().getColumn(0).setResizable(false);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 10, 395, 129);
        jPanel2.add(codtela0);
        codtela0.setBounds(56, 150, 60, 20);
        jPanel2.add(nome2tela0);
        nome2tela0.setBounds(56, 180, 150, 20);

        email2tela0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email2tela0ActionPerformed(evt);
            }
        });
        jPanel2.add(email2tela0);
        email2tela0.setBounds(56, 210, 150, 20);
        jPanel2.add(tel2tela0);
        tel2tela0.setBounds(60, 240, 150, 20);

        jLabel5.setText("Código :");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(10, 150, 60, 14);

        jLabel6.setText("Nome :");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(10, 180, 34, 14);

        jLabel7.setText("Email : ");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(10, 210, 34, 14);

        jLabel8.setText("Telefone : ");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(0, 240, 60, 14);

        carregar.setText("Carregar");
        carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarActionPerformed(evt);
            }
        });
        jPanel2.add(carregar);
        carregar.setBounds(290, 150, 90, 23);

        salvaratualizacao.setText("Salvar");
        salvaratualizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaratualizacaoActionPerformed(evt);
            }
        });
        jPanel2.add(salvaratualizacao);
        salvaratualizacao.setBounds(290, 190, 90, 23);

        atualizar.setText("Atualizar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });
        jPanel2.add(atualizar);
        atualizar.setBounds(290, 230, 90, 23);

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailtela0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailtela0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailtela0ActionPerformed

    private void teltela0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teltela0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teltela0ActionPerformed

    private void incluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incluirActionPerformed
       nom = nome2tela0.getText(); // recebendo o nome
      em = emailtela0.getText(); // recebendo o email
      
      
      tel = Long.valueOf(teltela0.getText());// recebendo o telefone

       Driver.carregaDriver();
       
      try { 
               
                   
               
            Connection con = null;
            
            
    try {
    con = (Connection) DriverManager.getConnection(url2, username, password);
    } catch (SQLException ex) {

    Logger.getLogger(principal_GUI.class.getName()).log(Level.SEVERE, null, ex);

            
                   }

            // Recebendo os dados a serem inseridos na tabela
            String sql = "INSERT INTO cliente(cli_nome,cli_email,cli_tel) values('"+nom+"','"+em+"','"+tel+"')";
     
            try { // Tratamento de Erros para inserção

                // Criando varialvel que executara a inserção
                PreparedStatement inserir = (PreparedStatement) con.prepareStatement(sql);
                inserir.execute(); // Executando a inserção

  JOptionPane.showMessageDialog(null,"\nInserção realizada com sucesso!!!\n","",-1);
                nometela0.setText("");
                emailtela0.setText("");
                teltela0.setText("");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"\nErro na inserção!","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Tratamento de erro caso o usuario não digite o telefone corretamente
            JOptionPane.showMessageDialog(null,"Digite os dados corretamente","ERRO",0);
            teltela0.setText("");
        }

       

       
    }//GEN-LAST:event_incluirActionPerformed

    private void fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharActionPerformed
        System.exit(0);
    }//GEN-LAST:event_fecharActionPerformed

    private void email2tela0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email2tela0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email2tela0ActionPerformed

    private void carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarActionPerformed
      try{     //Iniciando o possivel tratamento de erros
            //Declarando a variavel código
            int codigo = Integer.valueOf(codtela0.getText());
            Driver.carregaDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url2, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(principal_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
                String sql = "SELECT cli_nome,cli_email, cli_tel FROM cliente where cli_cod = "+codtela0.getText();
                // Criando variavel que executara o comando da string sql
                Statement stm = (Statement) con.createStatement();
                try//Tratamento de erro da consulta
                { //Criando variavel que exibira os resultados
                    //Executando o comando da string sql na variavel rs
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; // Variavel utilizada para saber se ha dados cadastrados

                    while (rs.next()) {  // Criando variaveis que receberão os valores do banco de dados
                        String nome = rs.getString("cli_nome");
                        String email = rs.getString("cli_email");
                        String telefone = rs.getString("cli_tel");

                        i++;

                        //JOptionPane.showMessageDialog(null,"Nome: " + nome + "\nEmail: " +telefone + "\nTelefone: " +telefone, "Resultado",-1);
                        nome2tela0.setText(String.valueOf(nome));
                        email2tela0.setText(String.valueOf(email));
                        tel2tela0.setText(String.valueOf(telefone));

                    }

                    if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Dado não cadastrado","Resultado",-1);

                    }

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"\nErro ao consultar!","ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            codtela0.setText("");
        }

    }//GEN-LAST:event_carregarActionPerformed

    private void salvaratualizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaratualizacaoActionPerformed
        nom = nome2tela0.getText(); // recebendo o nome
      em = email2tela0.getText(); // recebendo o email         
      tel = Long.valueOf(tel2tela0.getText());// recebendo o telefone

       Driver.carregaDriver();
       
      try {     
            Connection con = null;
      try {
            con = (Connection) DriverManager.getConnection(url2, username, password);
      }catch (SQLException ex) {
            Logger.getLogger(principal_GUI.class.getName()).log(Level.SEVERE, null, ex);
      }
            String sql = "UPDATE cliente SET Cli_nome='"+nom+"',Cli_email='"+em+"',Cli_tel='"+tel+"' WHERE Cli_Cod="+codtela0.getText();
            
     
            try { 
                PreparedStatement inserir = (PreparedStatement) con.prepareStatement(sql);
                inserir.execute(); // Executando a inserção

                JOptionPane.showMessageDialog(null,"\nInserção realizada com sucesso!!!\n","",-1);
                nome2tela0.setText("");
                email2tela0.setText("");
                tel2tela0.setText("");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"\nErro na inserção!","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Tratamento de erro caso o usuario não digite o telefone corretamente
            JOptionPane.showMessageDialog(null,"Digite os dados corretamente","ERRO",0);
            tel2tela0.setText("");
        }    
  refresh();
    }//GEN-LAST:event_salvaratualizacaoActionPerformed

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
                 refresh();
    }//GEN-LAST:event_atualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal_GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizar;
    private javax.swing.JButton carregar;
    private java.util.List<conexao3.Cliente> clienteList;
    private java.util.List<conexao3.Cliente> clienteList1;
    private javax.persistence.Query clienteQuery;
    private javax.persistence.Query clienteQuery1;
    private javax.swing.JTextField codtela0;
    private javax.swing.JTextField email2tela0;
    private javax.swing.JTextField emailtela0;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton fechar;
    private javax.swing.JButton incluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nome2tela0;
    private javax.swing.JTextField nometela0;
    private javax.swing.JButton salvaratualizacao;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField tel2tela0;
    private javax.swing.JTextField teltela0;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private TableModel DbUtils(ResultSet rs) {
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
