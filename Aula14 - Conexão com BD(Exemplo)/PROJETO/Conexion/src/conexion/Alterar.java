/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Alterar.java
 *
 * Created on 01/10/2012, 15:09:43
 */

package conexion;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabio
 */
public class Alterar extends javax.swing.JFrame {
Driver Driver = new Driver();

     // Configurando a nossa conexão com um banco de dados//

            String serverName = "localhost";    //caminho do servidor do BD

            String mydatabase ="conexaobd";        //nome do seu banco de dados

            String url = "jdbc:mysql://" + serverName + "/" + mydatabase;

            String url2 = "jdbc:mysql://localhost/conexaobd";
            String username = "root";        //nome de um usuário de seu BD

            String password = "";      //sua senha de acesso
    /** Creates new form Alterar */
    public Alterar() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        conexaobdPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("conexaobdPU").createEntityManager();
        clienteQuery = java.beans.Beans.isDesignTime() ? null : conexaobdPUEntityManager.createQuery("SELECT c FROM Cliente c");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        clienteQuery1 = java.beans.Beans.isDesignTime() ? null : conexaobdPUEntityManager.createQuery("SELECT c FROM Cliente c");
        clienteList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery1.getResultList();
        Alterar = new javax.swing.JButton();
        Carregar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        alt_cod = new javax.swing.JTextField();
        alt_nome = new javax.swing.JTextField();
        alt_tel = new javax.swing.JTextField();
        SAIR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ALTERAR");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Alterar.setText("Salvar");
        Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarActionPerformed(evt);
            }
        });
        getContentPane().add(Alterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 296, 90, -1));

        Carregar.setText("Carregar");
        Carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarregarActionPerformed(evt);
            }
        });
        getContentPane().add(Carregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 296, -1, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Código:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nome:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 157, -1, -1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Telefone:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 217, -1, -1));

        alt_cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                alt_codKeyPressed(evt);
            }
        });
        getContentPane().add(alt_cod, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 120, -1));
        getContentPane().add(alt_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 157, 230, -1));
        getContentPane().add(alt_tel, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 217, 140, -1));

        SAIR.setText("SAIR");
        SAIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAIRActionPerformed(evt);
            }
        });
        getContentPane().add(SAIR, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 296, -1, -1));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList1, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliCod}"));
        columnBinding.setColumnName("Cli Cod");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliNome}"));
        columnBinding.setColumnName("Cli Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliTel}"));
        columnBinding.setColumnName("Cli Tel");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 420, 100));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarActionPerformed
        try{// Inicio de um possivel tratamento de erro envolvendo as variaveis telefone e codigo
            int  telefone =Integer.valueOf(alt_tel.getText());
            int codigo = Integer.valueOf(alt_cod.getText());
            Driver.carregaDriver(); // Carregando o driver

            Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(Alterar.class.getName()).log(Level.SEVERE, null, ex);
                }

            // Crainado a String nome para receber o nome digitado na tela
            String nome = alt_nome.getText();

            // Criando a variavel sql para armazenar o comando para alterar o registro
            String sql;
            sql="UPDATE cliente SET cli_nome='"+nome+"', cli_tel="+telefone+" WHERE cli_cod="+alt_cod.getText();

            try// Possivel tratamento de erro para a alteração de dados
            {
                // Criando a variavel inserir para executar o comando da variavel sql
                PreparedStatement inserir = (PreparedStatement) con.prepareStatement(sql);
                inserir.execute();// Executanto o comando
                // Registro alterado

                JOptionPane.showMessageDialog(null,"\nAlteração realizada com sucesso!!!\n","",-1);
                alt_cod.setText("");
                alt_nome.setText("");
                alt_tel.setText("");
            } catch (Exception ex) {// Alteração mal sucedida
                JOptionPane.showMessageDialog(null,"\n Alteração mal sucedida!","ERRO!",0);
            }


        }catch(NumberFormatException erro){
            // Dados digitados de forma errada
            JOptionPane.showMessageDialog(null,"Verifique o codigo e digite os dados corretamente","ERRO",0);
            alt_tel.setText("");
        }
}//GEN-LAST:event_AlterarActionPerformed

    private void CarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarregarActionPerformed
        Driver.carregaDriver(); // Carregando o driver

        try {// Tratamento de erro para a conexao
            // Declarando a variavel de conexão con
            // e estabelendo a conexão
            Connection con = (Connection) DriverManager.getConnection(url, username, password);

            // Declarando a string sql para executar o comando de consulta
            String sql = "SELECT cli_nome,cli_tel FROM cliente where cli_cod = "+alt_cod.getText();

            // Declarando a variavel stm para executar o comando da variavel sql
            Statement stm = (Statement) con.createStatement();
            try//Tratamento de erro da consulta
            { //Criando variavel que exibira os resultados
                //Executando o comando da string sql na variavel rs
                ResultSet rs = stm.executeQuery(sql);
                int  i=0; // Varivel utilizada para verificar de ha dados cadastrados
                while (rs.next()) {
                    i++;
                    String nome = rs.getString("cli_nome");
                    String telefone = rs.getString("cli_tel");

                    // Exibindo os resultados nas JTextField
                    alt_nome.setText(nome);
                    alt_tel.setText(telefone);
                }
                //Consulta realizada com sucesso!!!

                if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                    JOptionPane.showMessageDialog(null,"Dado não cadastrado","Resultado",-1);

                }

            } catch (Exception ex) { // Ocorreu um erro na consulta
                JOptionPane.showMessageDialog(null,"\nErro na consulta!","ERRO!",0);
            }

        } catch (SQLException ex) {
            // Conexão com servidor mal sucedida
            JOptionPane.showMessageDialog(null,"Erro ao fazer conexão com o servidor!","ERRO!",0);
        }
}//GEN-LAST:event_CarregarActionPerformed

    private void alt_codKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alt_codKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_alt_codKeyPressed

    private void SAIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAIRActionPerformed
        this.dispose();
}//GEN-LAST:event_SAIRActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alterar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alterar;
    private javax.swing.JButton Carregar;
    private javax.swing.JButton SAIR;
    private javax.swing.JTextField alt_cod;
    private javax.swing.JTextField alt_nome;
    private javax.swing.JTextField alt_tel;
    private java.util.List<conexion.Cliente> clienteList;
    private java.util.List<conexion.Cliente> clienteList1;
    private javax.persistence.Query clienteQuery;
    private javax.persistence.Query clienteQuery1;
    private javax.persistence.EntityManager conexaobdPUEntityManager;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
